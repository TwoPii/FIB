library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;

library LogicWorks;
use LogicWorks.debug.all;

entity contadores is
  port (reloj, Pcero, parar: in std_logic; 		-- reloj, puesta a cero, parar
        mA, mI, mR, PBRDL: in std_logic;
        opsec: in std_logic_vector (3 downto 0);
		opMD: in std_logic_vector (4 downto 0);
		cntA: in std_logic_vector (5 downto 0);
		mocn: in std_logic;
        RD: in std_logic ); 				
end contadores;

architecture comportamiento of contadores is

begin

cnt_ciclos :process(reloj, Pcero, parar)
variable ciclos: integer;
variable ins: integer;
variable un: integer;
variable dos: integer;
variable tres: integer;
variable state: integer;
variable salts: integer;
variable sct: integer;
variable sub: integer;
variable st: integer;
variable ld: integer;
variable movz: integer;
variable movn: integer;
variable ldcmp: integer;
variable stcmp: integer;
begin
	if Pcero'event and Pcero = '1' then
		ciclos := 0;
		ins := 0;
		un := 0;
		dos := 0;
		tres := 0;
		state := 0;
		salts := 0;
		sct := 0;
		sub := 0;
		ld := 0;
		st := 0;
		movz := 0;
		movn := 0;
		ldcmp := 0;		
		stcmp := 0;
		writeln("Inicio ejecucion");
	elsif parar'event and parar = '1' then
		writeln("Final ejecucion");
		writeln("Ciclos ejecucion = ", ciclos);
		writeln("Instrucciones ejecucion = ", ins);
		writeln("UN = ", un);
		writeln("DOS = ", dos);
		writeln("TRES = ", tres);
		writeln("salts = ", salts);
		writeln("SCT = ", sct);
		writeln("Subrutines = ", sub);
		writeln("Load = ", ld);
		writeln("LoadCmp = ", ldcmp);
		writeln("Store = ", st);
		writeln("StoreCmp = ", stcmp);
		writeln("Predicades falses = ", movz+movn);
	elsif reloj'event and reloj = '1' and Pcero = '0' then
		ciclos := ciclos + 1;
		if mR = '1' and mI = '0' and mA = '0' then
			sct := sct+1;
		end if;   
		if mA = '1' then
		    if mI = '0' then
				sub := sub+1;
			end if;
		end if;
		if RD = '0' then
		    ins := ins + 1;
		    if state = 3 then 
		      tres := tres+1;
		    elsif state = 2 then
		      dos := dos+1;
		    elsif state = 1 then
		      un := un+1;
		    end if;
		    state := 0;
		else
			state := state+1;
		end if;  
		if mR = '1' or mA = '1' or mI = '1' or opsec(3) = '1' then
		  salts := salts+1;
		end if;
		if opMD(4) = '1' then
			if opMD(3) = '0' then
			    ld := ld+1;
			else
				st := st+1;
			end if;
		end if;
		if mocn = '0' then
		    if cntA = "001010" then
		    	movz := movz+1;
		    elsif cntA = "001011" then
		    	movn := movn+1;
		    end if;
		end if;
		if cntA = "001010" then
		  	ldcmp := ldcmp+1;
		elsif cntA = "001011" then
		  	stcmp := stcmp+1;
		end if; 
	end if;
end process cnt_ciclos;

end comportamiento;
