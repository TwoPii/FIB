library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;

use work.campo_rt.all;

entity decIMMval is								-- validar operandos fuentes, instrucciones RGIMM
	port(INST: in std_logic_vector(31 downto 0);  
		valreg: out std_logic_vector(1 downto 0));		-- bit 1: rs; bit 0: rt
end;

architecture comportamiento of decIMMval is
 
begin

PdecIMMval:process(INST)                         
-- campos de la instruccion
	variable rt:  std_logic_vector(4 downto 0);
	variable rtA: std_logic_vector(1 downto 0);
	variable rtB: std_logic_vector(2 downto 0);

	variable Erta, Ertb: integer;
            
begin
	rt := INST(20 downto 16);
	rtA:= INST(20 downto 19);
	rtB:= INST (18 downto 16);
       
	valreg(1) <= '0';
	valreg(0) <= '0';	

-- validez de los identificadores de registro fuente     
	ErtA := conv_integer(rtA);
		case ErtA is
			when ARTCERO =>							-- rt: Bits BAJOS correspondientes a bits ALTOS = ARTCERO
				ErtB := conv_integer(rtB);
				case ErtB is
					when Bbltz | Bbgez =>			-- bltz branch if less than zero
						valreg(1) <= '1';				-- bgez branch if greater than or equal zero
				end case;
			when ARTDOS =>							-- rt: Bits BAJOS correspondientes a bits ALTOS = ARTDOS   
				ErtB := conv_integer(rtB);
				case ErtB is
					when Bbltzal | Bbgezal =>		-- bltzal branch if less than zero and link
						valreg(1) <= '1';				-- bgezal branch if greater than or equal zero and link
				end case;
		end case;
end process PdecIMMval;

end;


 